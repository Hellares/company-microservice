// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo para Rubros
model Rubro {
  id            String    @id @default(uuid())
  nombre        String    @unique
  descripcion   String
  slug          String    @unique
  icono         String?
  estado        Boolean   @default(true)
  orden         Int
  empresas      Empresa[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([estado])
  @@index([orden])
  @@map("rubros")
}

// Modelo para Planes
model Plan {
  id                String    @id @default(uuid())
  nombre            String    @unique
  descripcion       String
  precio            Decimal   @db.Decimal(10,2)
  duracionDias      Int
  nivelPlan         NivelPlan
  caracteristicas   Json
  limites           Json
  estado            Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  empresasPlanes    EmpresaPlan[]

  @@index([estado])
  @@index([nivelPlan])
  @@map("planes")
}

// Registro de planes por empresa
model EmpresaPlan {
  id              String    @id @default(uuid())
  empresa         Empresa   @relation(fields: [empresaId], references: [id])
  empresaId       String
  plan            Plan      @relation(fields: [planId], references: [id])
  planId          String
  fechaInicio     DateTime  @default(now())
  fechaFin        DateTime?
  estado          EstadoPlan @default(ACTIVO)
  montoPagado     Decimal   @db.Decimal(10,2)
  metodoPago      String?
  comprobantePago String?   // ID de la imagen en el microservicio de imágenes
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([empresaId])
  @@index([estado])
  @@map("empresas_planes")
}

// Empresa principal
model Empresa {
  id                String    @id @default(uuid())
  nombreComercial   String
  razonSocial       String
  ruc               String    @unique
  slug              String    @unique
  estado            EstadoEmpresa @default(EN_REVISION)
  verificada        Boolean   @default(false)
  rubro            Rubro     @relation(fields: [rubroId], references: [id])
  rubroId          String
  informacionLegal InformacionLegal?
  sedes            Sede[]
  planesHistorial  EmpresaPlan[]
  logoId           String?    // ID de la imagen en el microservicio de imágenes
  portadaId        String?    // ID de la imagen en el microservicio de imágenes
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  archivos      Archivo[]

  @@index([estado])
  @@index([verificada])
  @@index([rubroId])
  @@index([razonSocial])
  @@index([nombreComercial])
  @@map("empresas")
}

// Modelo para Sedes
model Sede {
  id              String    @id @default(uuid())
  empresa         Empresa   @relation(fields: [empresaId], references: [id])
  empresaId       String
  nombre          String
  esPrincipal     Boolean   @default(false)
  estado          EstadoSede @default(ACTIVA)
  logoId          String?    // ID de la imagen en el microservicio de imágenes
  portadaId       String?    // ID de la imagen en el microservicio de imágenes
  ubicacion       Ubicacion?
  contacto        ContactoSede?
  configuracion   ConfiguracionSede?
  horarios        HorarioSede[]
  zonaCobertura   ZonaCobertura[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([empresaId])
  @@index([estado])
  @@index([esPrincipal])
  @@map("sedes")
}

// Ubicación de la Sede
model Ubicacion {
  id              String   @id @default(uuid())
  sede            Sede     @relation(fields: [sedeId], references: [id])
  sedeId          String   @unique
  direccion       String
  numeroExterior  String?
  numeroInterior  String?
  referencia      String?
  codigoPostal    String
  distrito        String
  provincia       String
  departamento    String
  pais            String   @default("Perú")
  latitud         Float
  longitud        Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([distrito, provincia, departamento])
  @@index([latitud, longitud])
  @@map("ubicaciones")
}

// Información de Contacto de Sede
model ContactoSede {
  id                String   @id @default(uuid())
  sede              Sede     @relation(fields: [sedeId], references: [id])
  sedeId            String   @unique
  telefonoPrincipal String
  telefonoSecundario String?
  emailPrincipal    String
  emailSecundario   String?
  whatsapp          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@index([telefonoPrincipal])
  @@index([emailPrincipal])
  @@map("contactos_sede")
}

// Configuración de la Sede
model ConfiguracionSede {
  id              String   @id @default(uuid())
  sede            Sede     @relation(fields: [sedeId], references: [id])
  sedeId          String   @unique
  colorPrimario   String?
  colorSecundario String?
  horaApertura    String?  // Formato HH:mm
  horaCierre      String?  // Formato HH:mm
  diasOperacion   String[] // Array de días de la semana
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("configuraciones_sede")
}

// Horarios de la Sede
model HorarioSede {
  id            String    @id @default(uuid())
  sede          Sede      @relation(fields: [sedeId], references: [id])
  sedeId        String
  diaSemana     DiaSemana
  horaApertura  String    // Formato HH:mm
  horaCierre    String    // Formato HH:mm
  cerrado       Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([sedeId, diaSemana])
  @@index([sedeId])
  @@map("horarios_sede")
}

// Zonas de Cobertura
model ZonaCobertura {
  id            String    @id @default(uuid())
  sede          Sede      @relation(fields: [sedeId], references: [id])
  sedeId        String
  nombre        String
  descripcion   String?
  radio         Float     // Radio en kilómetros
  centroLatitud Float
  centroLongitud Float
  poligono      Json?     // Array de coordenadas para zonas no circulares
  activo        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([sedeId])
  @@index([activo])
  @@index([centroLatitud, centroLongitud])
  @@map("zonas_cobertura")
}

// Información Legal
model InformacionLegal {
  id                    String   @id @default(uuid())
  empresa               Empresa  @relation(fields: [empresaId], references: [id])
  empresaId             String   @unique
  regimenTributario     String
  tipoContribuyente     String
  fechaInicioActividades DateTime
  domicilioFiscal       String
  representanteLegal    String
  dniRepresentante      String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("informacion_legal")
}

enum NivelPlan {
  BASICO
  ESTANDAR
  PREMIUM
  ENTERPRISE
}

enum EstadoPlan {
  PENDIENTE
  ACTIVO
  VENCIDO
  CANCELADO
}

enum EstadoEmpresa {
  EN_REVISION
  ACTIVA
  SUSPENDIDA
  INACTIVA
  BLOQUEADA
}

enum EstadoSede {
  ACTIVA
  INACTIVA
  EN_MANTENIMIENTO
  CERRADA_TEMPORALMENTE
}

enum DiaSemana {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO
}


enum CategoriaArchivo {
  LOGO
  PORTADA
  SERVICIO
  PRODUCTO
  GALERIA
  TESTIMONIO
  PUBLICIDAD
  DOCUMENTO
  VIDEO
  OTRO
}
model Archivo {
  id            String          @id @default(uuid())
  nombre        String          // Nombre original del archivo
  filename      String          // Nombre en el storage (incluye timestamp)
  ruta          String          // Ruta completa en el storage (incluye tenant)
  tipo          String          // Mimetype (image/jpeg, etc.)
  tamanho       Int             // Tamaño en bytes
  empresaId     String          // Id de la empresa (tenant)
  categoria     CategoriaArchivo // Tipo de imagen
  entidadId     String?         // ID de la entidad relacionada
  tipoEntidad   String?         // Nombre de la entidad (servicio, producto, etc.)
  descripcion   String?         // Descripción opcional
  orden         Int?            // Para ordenar imágenes de galería
  esPublico     Boolean         @default(true) // Si es accesible públicamente
  provider      String?         //Proveedor de almacenamiento (firebase, cloudinary, s3, local)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  // Relaciones
  empresa       Empresa         @relation(fields: [empresaId], references: [id])

  @@index([empresaId, categoria])
  @@index([entidadId, tipoEntidad])
  @@index([provider])
  @@index([filename])
  @@map("archivos")
}